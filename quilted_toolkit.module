<?php
/**
 * @file
 * Various helpful code snippets.
 */

/**
 * Implements hook_action_info().
 */
function quilted_toolkit_action_info() {
  $info['quilted_toolkit_pathauto_node_delete_action'] = array(
    'type' => 'node',
    'label' => t('Delete node alias'),
    'configurable' => FALSE,
  );

  $info['quilted_toolkit_menu_node_delete_action'] = array(
    'type' => 'node',
    'label' => t('Delete menu links'),
    'configurable' => FALSE,
  );

  return $info;
}

/**
 * Create an action for pathauto_node_delete().
 */
function quilted_toolkit_pathauto_node_delete_action($node, $context = array()) {
  module_load_include('module', 'pathauto');
  pathauto_node_delete($node);
}

/**
 * Create an action for menu_node_delete().
 */
function quilted_toolkit_menu_node_delete_action($node, $context = array()) {
  menu_node_delete($node);
}

/**
 * Implements hook_context_registry().
 */
function quilted_toolkit_context_registry() {
  $registry = array();
  $registry['reactions'] = array();
  $registry['reactions']['breadcrumb_allow_hidden'] = array(
    'title' => t('Breadcrumb (Allow hidden menus)'),
    'description' => t('Set the breadcrumb trail to the selected menu item.'),
    'plugin' => 'quilted_toolkit_context_reaction_breadcrumb_allow_hidden',
  );
  return $registry;
}

/**
 * Implements hook_context_plugins().
 */
function quilted_toolkit_context_plugins() {
  $plugins = array();
  $plugins['quilted_toolkit_context_reaction_breadcrumb_allow_hidden'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'quilted_toolkit') . '/plugins',
      'file' => 'quilted_toolkit_context_reaction_breadcrumb_allow_hidden.inc',
      'class' => 'quilted_toolkit_context_reaction_breadcrumb_allow_hidden',
      'parent' => 'context_reaction_menu',
    ),
  );
  return $plugins;
}

/**
 * Implementation of hook_page_delivery_callback_alter().
 */
function quilted_toolkit_page_delivery_callback_alter() {
  if ($plugin = context_get_plugin('reaction', 'breadcrumb_allow_hidden')) {
    $plugin->execute();
  }
}

/**
 * Helper function to find nodes by type and title.
 *
 * @return nid
 */
function quilted_toolkit_get_nid_by_title($title, $type = NULL) {
  $query = db_select('node', 'n');
  $query->condition('n.title', $title);

  if (!is_null($type)) {
    $query->condition('n.type', $type);
  }

  $query->condition('n.status', 1);
  $query->fields('n', array('nid'));
  $query_result = $query->execute();
  $nid = NULL;

  foreach ($query_result as $record) {
    $nid = $record->nid;
  }

  return $nid;
}
